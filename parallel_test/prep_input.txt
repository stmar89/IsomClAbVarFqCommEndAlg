/* vim: set syntax=magma : */
/*
*/


    PP<x>:=PolynomialRing(Integers());
    all:=Split(Read("~/IsomClassesAbVarFqComEnd/weil_poly_all.txt"));
    tot:=#all;
    ps:=[ 2,3,5,7 ];
    a_max:=4;

    all_input:=AssociativeArray();
    for p in ps, a in [1..a_max] do
        all_input[<p,a>]:={};
    end for;

    perc:=0;
    for icc->cc in all do
        if Truncate(100*icc/tot) gt perc then perc+:=1; printf "%o%% ",perc; end if;
        coeff:=eval(cc);
        h:=PP!coeff;
        if IsSquarefree(h) then
            g:=Degree(h) div 2;
            q:=Truncate(ConstantCoefficient(h)^(1/g));
            _,p,a:=IsPrimePower(q);
            if p in ps and a le a_max
                and not IsCoprime(coeff[g+1],q) // exclude ordinary
                        then
                Include(~all_input[<p,a>],cc);
            end if;
        end if;
    end for;

    input:=[];
    for k in Keys(all_input) do
        if #all_input[k] le 30 then
            input cat:=Setseq(all_input[k]);
        else
            input cat:=Setseq(RandomSubset(all_input[k],30));
        end if;
    end for;
    input:=RandomOrder(input);

    for cc in input do
        fprintf "~/IsomClassesAbVarFqComEnd/parallel_test/input.txt","%o\n",cc;
    end for;

